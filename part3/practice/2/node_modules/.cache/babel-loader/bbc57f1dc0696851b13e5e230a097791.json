{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './Compnents/Note';\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []);\n  console.log('render', notes.length, 'notes'); // ...\n}; // const App = (props) => {\n//   const [notes, setNotes] = useState(props.notes)\n//   const [newNote, setNewNote] = useState('')\n//   const [showAll, setShowAll] = useState(true)\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const noteObject = {\n//       content: newNote,\n//       date: new Date().toISOString(),\n//       important: Math.random() < 0.5,\n//       id: notes.length + 1,\n//     }\n//     setNotes(notes.concat(noteObject))\n//     setNewNote('')\n//   }\n//   const handleNoteChange = (event) => {\n//     console.log(event.target.value)\n//     setNewNote(event.target.value)\n//   }\n//   const notesToShow = showAll \n//   ? notes \n//   : notes.filter(note => note.important)\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <div>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all'}\n//         </button>\n//       </div>\n//       <p>Curently showing {showAll ? 'all' : 'important'}</p>\n//       <ul>\n//         {notesToShow.map(note => \n//           <Note key={note.id} note={note} />\n//         )}\n//       </ul>\n//       <form onSubmit={addNote}>\n//         <input\n//           value={newNote}\n//           onChange={handleNoteChange}\n//         />\n//         <button type=\"submit\">save</button>\n//       </form>   \n//     </div>\n//   )\n// }\n\n\n_s(App, \"YoJCZcz2gqmCo+muBMJeaVoxZWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aryan/Downloads/part2/src/App.js"],"names":["React","useState","useEffect","axios","Note","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","get","then","response","data","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAV,IAAAA,KAAK,CACFW,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,MAAAA,QAAQ,CAACS,QAAQ,CAACC,IAAV,CAAR;AACD,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AASAL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,KAAK,CAACY,MAA5B,EAAoC,OAApC,EAdgB,CAgBhB;AACD,CAjBD,C,CAoBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GArEMb,G;;KAAAA,G;AAsEN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './Compnents/Note'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  // ...\n}\n\n\n// const App = (props) => {\n//   const [notes, setNotes] = useState(props.notes)\n//   const [newNote, setNewNote] = useState('')\n//   const [showAll, setShowAll] = useState(true)\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const noteObject = {\n//       content: newNote,\n//       date: new Date().toISOString(),\n//       important: Math.random() < 0.5,\n//       id: notes.length + 1,\n//     }\n  \n//     setNotes(notes.concat(noteObject))\n//     setNewNote('')\n//   }\n\n//   const handleNoteChange = (event) => {\n//     console.log(event.target.value)\n//     setNewNote(event.target.value)\n//   }\n\n//   const notesToShow = showAll \n//   ? notes \n//   : notes.filter(note => note.important)\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <div>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all'}\n//         </button>\n//       </div>\n//       <p>Curently showing {showAll ? 'all' : 'important'}</p>\n//       <ul>\n//         {notesToShow.map(note => \n//           <Note key={note.id} note={note} />\n//         )}\n//       </ul>\n//       <form onSubmit={addNote}>\n//         <input\n//           value={newNote}\n//           onChange={handleNoteChange}\n//         />\n//         <button type=\"submit\">save</button>\n//       </form>   \n//     </div>\n//   )\n// }\nexport default App"]},"metadata":{},"sourceType":"module"}
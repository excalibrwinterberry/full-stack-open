{"version":3,"sources":["Compnents/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QADR,IACiB,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPnDK,EAAU,aAuBD,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAClBC,GAAI,IACJP,QAAS,mCACTQ,KAAM,2BACNV,WAAW,GAEb,OAAOK,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAaxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCjBrCK,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAe,OAAZA,EACM,KAGP,qBAAKlB,UAAU,QAAf,SACGkB,KAKDC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,0EA+FSC,EAzFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAEZ,IAEH,IAwCMC,EAAcP,EAClBJ,EACAA,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAE5B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcmB,QAASc,IACvB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,kDAAqBA,EAAU,MAAQ,eACvC,6BACGO,EAAYE,KAAI,SAAC3C,EAAK4C,GAAN,OACf,cAAC,EAAD,CAEE5C,KAAMA,EACNC,iBAAkB,kBA3CD,SAAAW,GACzB,IAAMZ,EAAO8B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAElC,KAAOA,KAChCmC,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDoC,EACU3B,EAAImC,GACXjC,MAAK,SAAAkC,GACJjB,EAASD,EAAMa,KAAI,SAAA3C,GAAI,OAAIA,EAAKY,KAAOA,EAAKZ,EAAOgD,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJrC,EAAKK,QADD,sCAGf8C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAElC,KAAOA,SA2BRwC,CAAmBpD,EAAKY,MAF3CgC,QAMX,uBAAMS,SA/DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnD,QAAS2B,EACTnB,KAAM,IAAI4C,KACVtD,UAAWuD,KAAKC,SAAW,IAG7BpB,EACUiB,GACP1C,MAAK,SAAAkC,GACJjB,EAASD,EAAMb,OAAO+B,IACtBf,EAAW,QAmDb,UACE,uBACE2B,MAAO5B,EACP6B,SA9BiB,SAACP,GACxBrB,EAAWqB,EAAMQ,OAAOF,UA+BpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC7GNC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.14ea764a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, { useState, useEffect } from 'react'\nimport Note from './Compnents/Note'\nimport noteService from './services/notes'\n\nconst Notification = ({message}) => {\n  if(message === null){\n    return null\n  }\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app Learnt from Full Stack open</em>\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    }\n  \n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n    })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll \n  ? notes \n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <p>Curently showing {showAll ? 'all' : 'important'}</p>\n      <ul>\n        {notesToShow.map((note,i) => \n          <Note \n            key={i} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}